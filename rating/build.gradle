plugins {
	id 'org.springframework.boot' version '2.2.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
    id "com.palantir.docker" version "0.22.1"
    id 'com.palantir.docker-compose' version "0.22.1"
}

bootJar {
    baseName = 'rating'
    version =  '0.1.0'
}

group = 'com.thoughtworks'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '12'

repositories {
	mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}
docker {
    name "${project.group}/${bootJar.baseName}"
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
    testCompile(group: 'org.testcontainers', name: 'testcontainers', version: '1.12.3') {
        exclude module: 'junit'
    }
    testImplementation "org.testcontainers:junit-jupiter:1.12.3"
    testCompile group: 'org.testcontainers', name: 'postgresql', version: '1.12.3'
}

test {
	useJUnitPlatform()
}

task up(type: Exec) {
    commandLine "./gradlew", "dockerCompose"
}

task down(type: Exec) {
    commandLine "docker-compose", "down"
}